<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting-starteds on Ernest</title>
    <link>http://docs.ernest.io/getting-started/index.xml</link>
    <description>Recent content in Getting-starteds on Ernest</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Wed, 09 Mar 2016 00:11:02 +0100</lastBuildDate>
    <atom:link href="http://docs.ernest.io/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Getting started</title>
      <link>http://docs.ernest.io/getting-started/</link>
      <pubDate>Wed, 09 Mar 2016 00:11:02 +0100</pubDate>
      
      <guid>http://docs.ernest.io/getting-started/</guid>
      <description>

&lt;h2 id=&#34;quickstart-guide&#34;&gt;Quickstart Guide&lt;/h2&gt;

&lt;p&gt;In this quickstart guide we will build a simple environment consisting of a public server and private server on AWS, and allow SSH access from our IP. You will need a working copy of Ernest and the Ernest CLI, your AWS Access Key and Secret Key, and an AWS VPC.&lt;/p&gt;

&lt;h3 id=&#34;get-ernest&#34;&gt;Get Ernest&lt;/h3&gt;

&lt;p&gt;Follow the instructions &lt;a href=&#34;downloads/&#34;&gt;here&lt;/a&gt; to get Ernest and the Ernest CLI.&lt;/p&gt;

&lt;h3 id=&#34;setup-your-user&#34;&gt;Setup Your User&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#Target your Ernest instance:

$ ernest target https://10.50.1.11
Target set
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10.50.1.11 is the IP address Ernest will be on if you are using the Vagrant Box. If you download the OVF or build Ernest from source then Ernest may be run on a different IP.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#Login to Ernest as admin:

$ ernest login --user admin --password w4rmR3d
Welcome back admin

#Create a user:

$ ernest user create user1 abc123
User user1 successfully created

#Create a group:

$ ernest group create group1
Group &#39;group1&#39; successfully created, you can add users with &#39;ernest group add-user username group1&#39;

#Add the user to the group:

$ ernest group add-user user1 group1
User &#39;user1&#39; is now assigned to group &#39;group1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-your-datacenter&#34;&gt;Setup Your Datacenter&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#Login as the user:

$ ernest login --user user1 --password abc123
Welcome back user1

#Configure the datacenter on Ernest using your Access Key, Secret Key, and VPC ID:

$ ernest datacenter create aws --region eu-west-1 --secret_access_key XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX --access_key_id YYYYYYYYYYYYYYYYYYYY my-dc
Datacenter &#39;my-dc&#39; successfully created

#Create Your Environment
#We will use this YAML (demo.yml) to create our environment:

---
name: demo
datacenter: my-dc
vpc_id: vpc-abcdef01

networks:
  - name: public
    subnet: 10.0.10.0/24
    public: true
  - name: private
    subnet: 10.0.11.0/24
    public: false
    nat_gateway: private-nat

nat_gateways:
  - name: private-nat
    public_network: public

security_groups:
  - name: public-sg
    egress:
      - ip: 0.0.0.0/0
        protocol: any
        from_port: &#39;0&#39;
        to_port: &#39;65535&#39;
    ingress:
      - ip: 52.211.19.211/32
        protocol: tcp
        from_port: &#39;22&#39;
        to_port: &#39;22&#39;
  - name: private-sg
    egress:
      - ip: 0.0.0.0/0
        protocol: any
        from_port: &#39;0&#39;
        to_port: &#39;65535&#39;
    ingress:
      - ip: 10.0.0.0/16
        protocol: tcp
        from_port: &#39;22&#39;
        to_port: &#39;22&#39;

instances:
  - name: public
    elastic_ip: true
    type: t2.micro
    image: ami-ed82e39e
    network: public
    start_ip: 10.0.10.11
    count: 1
    key_pair: my-key
    security_groups:
      - public-sg

  - name: private
    type: t2.micro
    image: ami-ed82e39e
    network: private
    start_ip: 10.0.11.11
    count: 1
    key_pair: my-key
    security_groups:
      - private-sg

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;now-we-can-apply-our-yaml&#34;&gt;Now we can apply our YAML:&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ernest service apply demo.yml

#Environment creation requested
#Ernest will show you all output from your requested service creation
#You can cancel at any moment with Ctrl+C, even the service is still being created, you won&#39;t have any output

Starting environment creation

Creating networks:
 - my-dc-demo-public
   IP     : 10.0.10.0/24
   AWS ID : subnet-defabc01
   Status : completed
 - my-dc-demo-private
   IP     : 10.0.11.0/24
   AWS ID : subnet-defabc02
   Status : completed
Networks successfully created

Creating firewalls:
 - my-dc-demo-public-sg
   Status    : completed
 - my-dc-demo-private-sg
   Status    : completed
Firewalls created

Creating instances:
 - my-dc-demo-public-1
   IP        : 10.0.10.11
   AWS ID    : i-abcdef01abcdef011
   Status    : completed
 - my-dc-demo-private-1
   IP        : 10.0.11.11
   AWS ID    : i-abcdef01abcdef012
   Status    : completed
Instances successfully created

Updating instances:
 - my-dc-demo-public-1
   IP        : 10.0.10.11
   PUBLIC IP : 52.210.179.96
   AWS ID    : i-abcdef01abcdef011
   Status    : completed
 - my-dc-demo-private-1
   IP        : 10.0.11.11
   PUBLIC IP :
   AWS ID    : i-abcdef01abcdef012
   Status    : completed
Instances successfully updated

Creating nats:
 - my-dc-demo-private-nat
   Status    : completed
Nats created
SUCCESS: rules successfully applied
Your environment endpoint is:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Congratulations you have built something with Ernest!&lt;/p&gt;

&lt;h3 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h3&gt;

&lt;p&gt;Find out how to use the CLI &lt;a href=&#34;documentation/&#34;&gt;here&lt;/a&gt;. Then dive into the detailed examples for the supported providers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Web Services&lt;/li&gt;
&lt;li&gt;vCloud Director&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>